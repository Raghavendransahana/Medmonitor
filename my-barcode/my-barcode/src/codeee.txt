import React, { useRef, useState } from 'react';
import Webcam from 'react-webcam';

const BarcodeScanner = () => {
  const webcamRef = useRef(null);
  const [capturedImage, setCapturedImage] = useState(null);

  // Capture the image when the button is clicked
  const capture = async () => {
    const imageSrc = webcamRef.current.getScreenshot(); // Capture the image
    if (imageSrc) {
      setCapturedImage(imageSrc); // Set the captured image to state
      console.log("Image captured successfully!");
      await sendImageToBackend(imageSrc); // Send the image to backend
    } else {
      console.error("Failed to capture image.");
    }
  };
  const sendImageToBackend = async (imageSrc) => {
    try {
      const base64Data = imageSrc.split(',')[1];
      const byteString = atob(base64Data);
      const arrayBuffer = new ArrayBuffer(byteString.length);
      const uint8Array = new Uint8Array(arrayBuffer);
  
      // Log to ensure image is being converted
      console.log('Image byteArray:', uint8Array);
  
      for (let i = 0; i < byteString.length; i++) {
        uint8Array[i] = byteString.charCodeAt(i);
      }
  
      const blob = new Blob([uint8Array], { type: 'image/jpeg' });
  
      const formData = new FormData();
      formData.append('image', blob, 'captured-image.jpg');
  
      // Debug log to check the FormData being sent
      console.log('FormData:', formData);
  
      const backendResponse = await fetch('http://localhost:3001/decode-barcode', {
        method: 'POST',
        body: formData,
      });
  
      if (!backendResponse.ok) {
        throw new Error('Network response was not ok');
      }
  
      const data = await backendResponse.json();
      console.log('Decoded barcode data:', data);
    } catch (error) {
      console.error('Error sending image to backend:', error);
    }
  };
  
  

  return (
    <div>
      {/* Webcam component to capture image */}
      <Webcam
        audio={false}
        ref={webcamRef}
        screenshotFormat="image/jpeg"
        width={400} // Set the width of the webcam
      />
      <button onClick={capture}>Capture</button>
      {/* Display the captured image */}
      {capturedImage && (
        <div>
          <h2>Captured Image:</h2>
          <img src={capturedImage} alt="Captured" width={400} />
        </div>
      )}
    </div>
  );
};

export default BarcodeScanner;
